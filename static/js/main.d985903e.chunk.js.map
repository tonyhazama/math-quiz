{"version":3,"sources":["util/generateQuestions.js","start/index.js","quiz/index.js","util/useInterval.js","Result.js","App.js","reportWebVitals.js","index.js"],"names":["generateQuestions","difficulty","numberOfQuestion","q","Array","fill","map","e","i","key","generateQuestion","operators","max","min","o","Math","floor","random","length","operator","isDivision","a","b","answer","eval","StartComponent","props","useState","setDifficulty","mode","setMode","className","style","marginBottom","width","Group","value","onChange","target","Button","textAlign","onClick","_","onStartQuiz","QuizComponent","questions","setQuestions","answers","setAnswers","currentQ","setCurrentQ","isLastQuestion","useEffect","handleNext","handleFinish","isAllAnswered","filter","result","userAnswer","parseInt","onFinish","alert","display","flexDirection","alignItems","justifyContent","height","maxWidth","margin","onKeyPress","ev","code","time","splice","background","padding","borderRadius","flex","question","onChangeValue","newAnswers","paddingTop","paddingBottom","disabled","JSON","stringify","QuestionComponent","setQuestion","setValue","fontWeight","fontSize","Timer","setTime","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","prevTime","minute","second","Result","data","setData","score","setScore","columns","title","dataIndex","align","render","tags","color","renderData","col","c","number","isCorrect","dataSource","pagination","footer","onBack","App","parameter","setParameter","setResult","modes","n","t","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d985903e.chunk.js","sourcesContent":["export function generateQuestions (difficulty = 0, numberOfQuestion = 20) {\r\n  let q = new Array(numberOfQuestion).fill('');\r\n  q = q.map((e, i) => {\r\n    return {\r\n      key: i,\r\n      ...generateQuestion(difficulty, i)\r\n    };\r\n  });\r\n  return q;\r\n}\r\n\r\nexport function generateQuestion (difficulty = 0) {\r\n  const operators = [\r\n    ['-', '+'],\r\n    ['-', '+', '*'],\r\n    ['-', '+', '*', '/'],\r\n  ];\r\n  let max = 10;\r\n  let min = difficulty * 5;\r\n  const o = Math.floor(Math.random() * operators[difficulty].length);\r\n  const operator = operators[difficulty][o];\r\n  const isDivision = operator === '/';\r\n\r\n  let a = 1 + min + Math.floor(Math.random() * (isDivision ? max + 5 : max));\r\n  let b = 1 + min + Math.floor(Math.random() * (isDivision ? max - 5 : max));\r\n  if (isDivision) {\r\n    a = a*b;\r\n  }\r\n  // return `${a} ${operator} ${b} = ` + eval(`${a} ${operator} ${b}`);\r\n  return {\r\n    a, b, o: operator === '*' ? 'x' : operator, answer: eval(`${a} ${operator} ${b}`)\r\n  };\r\n}\r\n","import { Radio } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nexport default function StartComponent(props) {\r\n  const [difficulty, setDifficulty] =  useState(0);\r\n  const [mode, setMode] =  useState(0);\r\n\r\n  const startGame = () => {\r\n    props.onStartQuiz(difficulty, mode);\r\n  };\r\n\r\n  const onPickDifficulty = (e) => {\r\n    setDifficulty(e.target.value);\r\n  };\r\n\r\n  const onPickMode = (e) => {\r\n    setMode(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div style={{marginBottom: '20px', width: '360px'}}>\r\n        <Radio.Group style={{width: '100%'}} value={difficulty} onChange={onPickDifficulty}>\r\n          <Radio.Button style={{width: '33%', textAlign: 'center'}} value={0}>Easy</Radio.Button>\r\n          <Radio.Button style={{width: '33%', textAlign: 'center'}} value={1}>Medium</Radio.Button>\r\n          <Radio.Button style={{width: '33%', textAlign: 'center'}} value={2}>Hard</Radio.Button>\r\n        </Radio.Group>\r\n      </div>\r\n      <div style={{marginBottom: '20px', width: '360px'}}>\r\n        <Radio.Group style={{width: '100%'}} value={mode} onChange={onPickMode}>\r\n          <Radio.Button style={{width: '33%', textAlign: 'center'}} value={0}>5 Question</Radio.Button>\r\n          <Radio.Button style={{width: '33%', textAlign: 'center'}} value={1}>10 Question</Radio.Button>\r\n          <Radio.Button style={{width: '33%', textAlign: 'center'}} value={2}>Time </Radio.Button>\r\n        </Radio.Group>\r\n      </div>\r\n      <div style={{marginBottom: '20px'}}>\r\n        <button className='btn' onClick={_ => startGame()}>Start</button> \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Button, Col, Input, Row } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useInterval } from '../util/useInterval';\r\n\r\nexport default function QuizComponent(props) {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [currentQ, setCurrentQ] = useState(0);\r\n\r\n  const isLastQuestion = currentQ === questions.length - 1;\r\n\r\n  useEffect(_ => {\r\n    setQuestions(props.questions);\r\n  }, []);\r\n\r\n  const handlePrev = () => { setCurrentQ(currentQ > 0 ? currentQ - 1 : currentQ); };\r\n  const handleNext = () => { setCurrentQ(currentQ < (questions.length) ? currentQ + 1 : currentQ); };\r\n\r\n  const handleFinish = (q = questions, a = answers) => {\r\n    const isAllAnswered = a.filter(e => e && e.length > 0).length === q.length;\r\n    if (isAllAnswered) {\r\n      let result = q;\r\n      result = result.map((e, i) => {\r\n        return {...e, userAnswer: parseInt(a[i])};\r\n      });\r\n      props.onFinish(result);\r\n    } else {\r\n      alert('Please answer all the question');\r\n    }\r\n  };\r\n\r\n  const handleEnter = (ev) => {\r\n    if (ev.code === 'Enter' && !!answers[currentQ]) {\r\n      isLastQuestion ? handleFinish() : handleNext();\r\n    }\r\n  };\r\n\r\n  const handleOutOfTime = () => {\r\n    let q = questions.splice(0, currentQ);\r\n    let a = answers.splice(0, currentQ);\r\n    handleFinish(q, a);\r\n  };\r\n\r\n  const handleChangeValue = (key, value) => {\r\n    const newAnswers = [...answers];\r\n    newAnswers[key] = value;\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      height: '100%',\r\n      maxWidth: '600px',\r\n      margin: 'auto'\r\n      }}\r\n      onKeyPress={handleEnter}\r\n    >\r\n      <div style={{display: 'flex', justifyContent: 'space-between', width: '100%'}}>\r\n        <div></div>\r\n        {props.time ? <div>\r\n          <Timer time={props.time} onFinish={handleOutOfTime} />\r\n        </div> : ''}\r\n        <div style={{\r\n          background: '#dbdbdb',\r\n          padding: '5px 20px',\r\n          borderRadius: '1000px'\r\n        }}>\r\n          {props.time > 0 ? `${currentQ + 1}` : `${currentQ + 1} / ${questions.length}`}\r\n        </div>\r\n      </div>\r\n      <Row style={{flexDirection: 'column', flex: '1', width: '100%', justifyContent: 'end'}}>\r\n        {questions.length > 0 && questions[currentQ] ? <Col>\r\n          <QuestionComponent question={questions[currentQ]} onChangeValue={handleChangeValue} value={answers[currentQ]} />\r\n        </Col> : ''}\r\n        <Col style={{textAlign: 'center', paddingTop: '20px', paddingBottom: '200px'}}>\r\n          {/* <Button className=\"btn\" disabled={currentQ <= 0} onClick={handlePrev} style={{width: 'calc(50% - 10px)', marginRight: '20px'}}>\r\n            Previous\r\n          </Button> */}\r\n          {!isLastQuestion ? (\r\n            <Button className=\"btn\" disabled={!answers[currentQ]} onClick={handleNext} style={{width: '100%'}}>\r\n              Next\r\n            </Button>\r\n          ) :\r\n          <Button className=\"btn\" onClick={_ => handleFinish()} style={{width: '100%'}}>\r\n            Finish\r\n          </Button>}\r\n          \r\n        </Col>\r\n      </Row>\r\n      <div>\r\n        {JSON.stringify(answers)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst QuestionComponent = (props) => {\r\n  const [question, setQuestion] = useState({});\r\n  const [value, setValue] = useState('');\r\n  const {a = 'a', b = 'b', o = '+'} = question;\r\n  \r\n  useEffect(_ => {\r\n    setValue(props.value)\r\n    setQuestion(props.question);\r\n  }, [props.question]);\r\n\r\n  const handleChangeValue = (e) => {\r\n    props.onChangeValue(question.key, e.target.value);\r\n    setValue(e.target.value);\r\n  }\r\n  \r\n  \r\n\r\n  return (\r\n    <>\r\n      <div style={{fontWeight: 'bold', fontSize: '2em', textAlign: 'center', marginBottom: '10px'}}>\r\n        {`${a} ${o} ${b}`}\r\n      </div>\r\n      <div>\r\n        <Input value={value} onChange={handleChangeValue} />\r\n      </div>\r\n    </>\r\n  );\r\n} \r\n\r\nconst Timer = (props) => {\r\n  const [time, setTime] = useState(0);\r\n\r\n  useEffect(_ => {\r\n    if (props.time > 0) {\r\n      setTime(props.time)\r\n    }\r\n    \r\n  }, []);\r\n\r\n  useInterval(_ => {\r\n    if (time > 0) {\r\n      setTime(prevTime => prevTime - 1)\r\n      if (time === 1) {\r\n        props.onFinish();\r\n      }\r\n    }\r\n  }, time > 0 ? 1000 : null)\r\n\r\n  const minute = Math.floor(time / 60);\r\n  const second = time % 60;\r\n  return (\r\n    <div>\r\n      {`${minute} : ${second}`}\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}","import { CheckOutlined, CloseOutlined } from \"@ant-design/icons/lib/icons\";\r\nimport { Button, Col, Row, Table, Tag } from \"antd\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport function Result (props = {result: []}) {\r\n  const [data, setData] = useState([{}]);\r\n  const [score, setScore] = useState(null);\r\n  const columns = [\r\n    {\r\n      title: '#',\r\n      dataIndex: 'number',\r\n      key: 'number',\r\n    },\r\n    {\r\n      title: 'Question',\r\n      dataIndex: 'question',\r\n      key: 'question',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: 'Your Answer',\r\n      dataIndex: 'answer',\r\n      key: 'answer',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '',\r\n      dataIndex: 'isCorrect',\r\n      key: 'isCorrect',\r\n      render: tags => (<Tag color={tags ? 'green' : 'red'}>{tags ? <CheckOutlined />: <CloseOutlined />}</Tag>)\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    renderData(props.result);\r\n  }, []);\r\n\r\n  const renderData = (data) => {\r\n    const col = data.map((c, i) => ({\r\n      number: i+1,\r\n      question: `${c.a} ${c.o} ${c.b} = ${c.answer}`,\r\n      answer: c.userAnswer,\r\n      isCorrect: c.answer === c.userAnswer\r\n    }));\r\n    setData(col);\r\n    setScore(col.filter(e => e.isCorrect).length);\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <Row style={{flexDirection: 'column', alignItems: 'center'}}>\r\n        <Col style={{fontSize: '1.6em', fontWeight: 'bold', marginBottom: '2em'}}>Result</Col>\r\n        <Table dataSource={data} columns={columns} pagination={false} style={{marginBottom: '2em'}} footer={_ => (\r\n          score !== null && <div style={{display: 'flex', justifyContent: 'space-between', fontWeight: 'bold'}}>\r\n            <div>Score</div>\r\n            <div>{score} / {data.length}</div>\r\n          </div>\r\n        )} />\r\n        {/* {result.map((r, i) => {\r\n          const {a, o, b, answer, userAnswer} = r;\r\n          return (\r\n            <Col style={{ fontSize: '1.2em', textAlign: 'center', marginBottom: '2em'}}>\r\n              <div style={{fontWeight: 'bold'}}>Question {i+1}</div>\r\n              <div>{`${a} ${o} ${b} = ${answer}`}</div>\r\n            </Col>\r\n          )\r\n        })} */}\r\n        <Button onClick={props.onBack}>Back</Button>\r\n      </Row>\r\n    </>\r\n  )\r\n}","import React, {useEffect, useState} from 'react';\nimport StartComponent from './start';\nimport 'antd/dist/antd.css';\nimport { generateQuestions } from './util/generateQuestions';\nimport QuizComponent from './quiz';\nimport { Result } from './Result';\n\nexport default function App() {\n  const [parameter, setParameter] = useState(null);\n  const [questions, setQuestions] = useState(null);\n  const [result, setResult] = useState(null);\n  const modes = [\n    {n: 5, t: 0},\n    {n: 10, t: 0},\n    {n: 100, t: 120},\n  ];\n  \n  // useEffect(_ => {\n  //   initiateQuiz(0, 2);\n  //   handleFinish([{\"key\":0,\"a\":10,\"b\":9,\"o\":\"+\",\"answer\":19,\"userAnswer\":19},{\"key\":1,\"a\":5,\"b\":6,\"o\":\"+\",\"answer\":11,\"userAnswer\":11},{\"key\":2,\"a\":5,\"b\":5,\"o\":\"-\",\"answer\":0,\"userAnswer\":0},{\"key\":3,\"a\":8,\"b\":6,\"o\":\"+\",\"answer\":14,\"userAnswer\":1},{\"key\":4,\"a\":8,\"b\":4,\"o\":\"-\",\"answer\":4,\"userAnswer\":4}]);\n  // }, []);\n\n\n  const initiateQuiz = (difficulty, mode) => {\n    setParameter({difficulty, mode});\n    const q = generateQuestions(difficulty, modes[mode]['n']);\n    setQuestions(q);\n    console.log(q);\n  };\n  \n  const handleFinish = (result) => {\n    console.log(result);\n    setResult(result);\n  };\n\n  const handleBack = () => {\n    setParameter(null);\n    setQuestions(null);\n    setResult(null);\n  };\n\n\n  return (\n    <div style={{height: '100%'}}>\n      {parameter ? (\n        result ? <Result result={result} onBack={handleBack} /> :\n        <QuizComponent questions={questions} time={modes[parameter.mode].t} onFinish={handleFinish} />\n      ) : (\n        <StartComponent onStartQuiz={initiateQuiz} />\n      )}\n    </div>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    {/* <Bread /> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}